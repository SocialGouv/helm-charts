# yaml-language-server: $schema=./values.schema.json

# @param {string,null} [namespace] destination namespace
namespace:

# @param {string,null} [host] default hostname
host:

# @param {number} [servicePort] service port
servicePort: 1025

# @param {string,null} [certSecretName] ingress SSL cert name
certSecretName:

# @param {string,null} [repositoryName] helm repositoryName
repositoryName:

# @param {number} [replicaCount] Number of replicas
replicaCount: 1

# @param {object} [image] Docker image
image:
  # @param {string} [repository] image repository
  repository: maildev/maildev
  # @param {string} [pullPolicy] Docker image pull policy. see https://kubernetes.io/docs/concepts/containers/images#updating-images
  pullPolicy: IfNotPresent
  # @param {string} [tag] Docker image tag
  tag: "2.1.0"

# @param {array} [extraArgs] Extra startup arguments.
extraArgs: []
#  - "--outgoing-host"
#  - "smtp.yourdomaine.com"
#  - "--outgoing-port"
#  - "25"

# @param {object} [persistence] persistence config
persistence:
  # @param {boolean,null} [enabled] enable persistence
  enabled:
  # @param {string} [accessMode]
  accessMode: ReadWriteMany
  # @param {string} [size]
  size: 1024M
  # @param {string} [storageClass]
  storageClass: ""
  # @param {string} [existingClaim]
  existingClaim: ""
  # @param {string} [mountPath]
  mountPath: /home/node/maildev-data

# To clean some old mails when persistence is enabled
# @param {object} [cron]
cron:
  # @param {boolean,null} [enabled] enable cron cleanups
  enabled:
  # @param {object} [image] Docker image
  image:
    # @param {string} [repository] image repository
    repository: busybox
    # @param {string} [pullPolicy] Docker image pull policy. see https://kubernetes.io/docs/concepts/containers/images#updating-images
    pullPolicy: IfNotPresent
    # @param {string} [tag] Docker image tag
    tag: latest
  # @param {string} [schedule] Cleanup schedule
  schedule: "0 1 * * *"
  # @param {number} [daysToKeep] Retention
  daysToKeep: 15

# @param {object} [ingress]
ingress:
  # @param {boolean} [enabled] enable ingress
  enabled: true
  # @param {object} [annotations] ingress annotation
  annotations: {}

# @param {https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements} [resources] CPU/Memory resource requests/limits
resources:
  {}
  # limits:
  #   cpu:
  #   memory:
  # requests:
  #   cpu:
  #   memory:
