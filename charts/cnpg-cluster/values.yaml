# Default values for cnpg-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of Postgres instances in the cluster
instances: 1

annotations: {}

image:
  # -- Postgres image repository. Keep empty to use operator's default image. See: https://cloudnative-pg.io/documentation/1.17/operator_capability_levels/#override-of-operand-images-through-the-crd
  # repository: "ghcr.io/cloudnative-pg/postgresql"
  repository: "ghcr.io/cloudnative-pg/postgis"
  # -- Postgres image pull policy
  pullPolicy: IfNotPresent
  # -- Override the Postgres image tag
  tag: "15"

# -- Docker-registry secret names as an array
imagePullSecrets: []
# -- Create a docker-registry secret and use it as imagePullSecrets
registryCredentials:
# Eg:
#   mygitlab:
#     registry: gitlab-registry.example.org
#     email: foo@example.org
#     username: foobar
#     password: secret
# -- String to partially override cnpg-cluster.fullname template with a string (will prepend the release name)
nameOverride: ""
# --  String to fully override cnpg-cluster.fullname template with a string
fullnameOverride: ""

# -- CPU/Memory resource requests/limits
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Postgres instances labels for pod assignment
nodeSelector: {}

# -- Postgres instances labels for tolerations pod assignment
tolerations: []

# -- Extra configuration for Cluster's affinity resource,
# see: https://cloudnative-pg.io/documentation/1.17/api_reference/#AffinityConfiguration
extraAffinity: {}

persistence:
  # -- Size of each instance storage volume
  size: 8Gi
  # -- Resize existent PVCs, defaults to true
  resizeInUseVolumes:
  # persistence.storageClass -- StorageClass to use for database data,
  # Applied after evaluating the PVC template, if available.
  # If not specified, generated PVCs will be satisfied by the default storage class
  storageClass: ""
  # persistence.pvcTemplate -- Template to be used to generate the Persistent Volume Claim
  pvcTemplate: {}

backup:
  # -- Enable backups
  enabled: false

  # -- Schedule the backups, for instance every Sunday
  # this cron format has the seconds on the left
  schedule: "0 0 0 * * 0"

  # -- Schedule the SQL dump backups, for instance every Sunday
  sqlDumpSchedule: "0 0 * * 0"

  # -- RetentionPolicy is the retention policy to be used for backups and WALs (i.e. '60d').
  # The retention policy is expressed in the form of XXu where XX is a positive integer and
  # u is in [dwm] - days, weeks, months.
  retentionPolicy: 30d

  # -- Object store credentials and access config
  # See: https://cloudnative-pg.io/documentation/1.20/backup_recovery/
  barmanObjectStore:
    # destinationPath:
    # endpointURL:
    # s3Credentials:
    #   accessKeyId:
    #     name:
    #     key:
    #   secretAccessKey:
    #     name:
    #     key:
    #   region:
    #     name:
    #     key:

# -- Extra configuration for Cluster resource.
# See: https://cloudnative-pg.io/documentation/1.17/api_reference/#clusterspec
clusterExtraSpec: {}

# -- ScheduledBackup resources to create for this Cluster resource
# See: https://cloudnative-pg.io/documentation/1.17/api_reference/#ScheduledBackupSpec
scheduledBackups: {}
# Eg:
#   daily:
#     schedule: "0 0 0 * * *"

# -- Poller resources to create for this Cluster resource
# See: https://cloudnative-pg.io/documentation/1.17/api_reference/#PoolerSpec
poolers: {}
# Eg:
#   rw:
#     instances: 3
#     type: rw
#     pgbouncer:
#       poolMode: session
#       parameters:
#         max_client_conn: "1000"
#         default_pool_size: "10"

minSyncReplicas: 0
maxSyncReplicas: 0

postgresqlParameters: {}

extensions: []

dbName: app
dbOwner: app

monitoring:
  enablePodMonitor: false

superuserSecretName:

recovery:
  enabled: false

  # -- Name of the source cluster in the backups

  # -- Time to restore from, in RFC3339 format https://datatracker.ietf.org/doc/html/rfc3339
  # targetTime: "2020-11-26 15:22:00.00000+00"

  # -- Object store credentials and access config
  # See: https://cloudnative-pg.io/documentation/1.20/backup_recovery/
  barmanObjectStore:
    # destinationPath:
    # endpointURL:
    # name of the recovery server on the s3 backups
    # serverName:
    # s3Credentials:
    #   accessKeyId:
    #     name:
    #     key:
    #   secretAccessKey:
    #     name:
    #     key:
    #   region:
    #     name:
    #     key:

# List of SQL queries to be executed as a superuser in the application database right after is created - to be used with extreme care (by default empty)
postInitApplicationSQL: ""

# PostInitApplicationSQLRefs points references to ConfigMaps or Secrets which contain SQL files, the general implementation order to these references is from all Secrets to all ConfigMaps, and inside Secrets or ConfigMaps, the implementation order is same as the order of each array (by default empty)
postInitApplicationSQLRefs:
  # configMapRefs:
  # - name: post-init-sql-configmap
  #   key: configmap.sql
  # secretRefs:
  # - name: post-init-sql-secret
  #   key: secret.sql
