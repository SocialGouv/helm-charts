<<<<<<< HEAD
should render default:
=======
custom pgSecretName:
>>>>>>> 9e3eabf (feat: pgweb)
  1: |
    replicas: 1
    selector:
      matchLabels:
<<<<<<< HEAD
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: pgweb
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: pgweb
      spec:
        containers:
          - image: sosedoff/pgweb:0.14.1
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /
                port: http
=======
        component: pgweb
    template:
      metadata:
        labels:
          application: null
          component: pgweb
      spec:
        containers:
          - env: null
            envFrom:
              - secretRef:
                  name: custom-secret
            image: sosedoff/pgweb:0.14.1
            livenessProbe:
              failureThreshold: 6
              httpGet:
                path: /
                port: http
              initialDelaySeconds: 30
              periodSeconds: 5
              timeoutSeconds: 5
>>>>>>> 9e3eabf (feat: pgweb)
            name: pgweb
            ports:
              - containerPort: 8081
                name: http
<<<<<<< HEAD
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /
                port: http
            resources: {}
            securityContext: {}
        securityContext: {}
        serviceAccountName: RELEASE-NAME-pgweb
  2: |
    ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: http
    selector:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: pgweb
    type: ClusterIP
  3: |
    RELEASE-NAME-pgweb
  4: |
    ServiceAccount
should render with HPA:
  1: |
    selector:
      matchLabels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: pgweb
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: pgweb
      spec:
        containers:
          - image: sosedoff/pgweb:0.14.1
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /
                port: http
=======
            readinessProbe:
              failureThreshold: 15
              httpGet:
                path: /
                port: http
              initialDelaySeconds: 1
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 500m
                memory: 256Mi
              requests:
                cpu: 50m
                memory: 64Mi
            startupProbe:
              failureThreshold: 12
              httpGet:
                path: /
                port: http
              periodSeconds: 5
should render:
  1: |
    replicas: 1
    selector:
      matchLabels:
        component: pgweb
    template:
      metadata:
        labels:
          application: null
          component: pgweb
      spec:
        containers:
          - env: null
            envFrom: null
            image: sosedoff/pgweb:0.14.1
            livenessProbe:
              failureThreshold: 6
              httpGet:
                path: /
                port: http
              initialDelaySeconds: 30
              periodSeconds: 5
              timeoutSeconds: 5
>>>>>>> 9e3eabf (feat: pgweb)
            name: pgweb
            ports:
              - containerPort: 8081
                name: http
<<<<<<< HEAD
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /
                port: http
            resources: {}
            securityContext: {}
        securityContext: {}
        serviceAccountName: RELEASE-NAME-pgweb
  2: |
    ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: http
    selector:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: pgweb
    type: ClusterIP
  3: |
    maxReplicas: 100
    metrics:
      - resource:
          name: cpu
          targetAverageUtilization: 80
        type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: RELEASE-NAME-pgweb
  4: |
    RELEASE-NAME-pgweb
  5: |
    ServiceAccount
should render with ingress:
  1: |
    rules:
      - host: chart-example.local
        http:
          paths:
            - backend:
                service:
                  name: RELEASE-NAME-pgweb
                  port:
                    number: 80
              path: /
              pathType: ImplementationSpecific
=======
            readinessProbe:
              failureThreshold: 15
              httpGet:
                path: /
                port: http
              initialDelaySeconds: 1
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 500m
                memory: 256Mi
              requests:
                cpu: 50m
                memory: 64Mi
            startupProbe:
              failureThreshold: 12
              httpGet:
                path: /
                port: http
              periodSeconds: 5
>>>>>>> 9e3eabf (feat: pgweb)
