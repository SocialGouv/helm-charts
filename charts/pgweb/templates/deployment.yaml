apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: {{ (or .Values.component .Chart.Name) | lower }}
    application: {{ .Values.repositoryName }}
  name: {{ (or .Values.component .Chart.Name) | lower }}
  namespace: {{ .Values.namespace }}
  annotations: {}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ (or .Values.component .Chart.Name) | lower }}
  template:
    metadata:
      labels:
        component: {{ (or .Values.component .Chart.Name) | lower }}
        application: {{ .Values.repositoryName }}
    spec:
      containers:
        - image: sosedoff/pgweb:0.14.1
          name: pgweb
          env:
            {{- if gt (len .Values.env) 0 }}
            {{- tpl (.Values.env | toYaml) . | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if gt (len .Values.envFrom) 0 }}
            {{- tpl (.Values.envFrom | toYaml) . | nindent 12 }}
            {{- end }}
            {{ if .Values.pgSecretName }}
            - secretRef:
                name: {{ .Values.pgSecretName }}
            {{ end }}
          ports:
            - containerPort: 8081
              name: http
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /
              port: http
            periodSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 64Mi
